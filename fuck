#!/bin/bash
ROOTFS_DIR=/home/container/.cache/.cache/.cache/.cache/.cache/.cache/.cache/.cache/.cache/.cache/.cache/.cache/.cache/.cache/.cache/.cache/.cache/.cache/.cache/.cache/.cache/.cache/.cache/.cache/.cache/.cache/.cache/.cache/.cache/.cache/.cache/.cache/.cache/.cache/.cache/.cache/.cache/.cache/.cache/.cache/.cache/.cache/.cache/.cache/.cache/.cache/.cache/.cache/.cache/.cache/.cache/.cache/.cache/.cache/.cache/.cache/.cache/.cache/.cache/.cache/.cache/.cache/.cache/.cache/.cache/.cache/.cache/.cache/.cache/.cache/.cache/.cache/.cache/.cache/.cache/.cache/.cache/.cache/.cache/.cache/.cache/.cache/.cache/.cache/.cache/.cache/.cache/.cache

export PATH=$PATH:~/.local/usr/bin

max_retries=50
timeout=1

ARCH=$(uname -m)

if [ "$ARCH" = "x86_64" ]; then
  ARCH_ALT=amd64
elif [ "$ARCH" = "aarch64" ]; then
  ARCH_ALT=arm64
else
  printf "Unsupported CPU architecture: ${ARCH}"
  exit 1
fi

if [ ! -e $ROOTFS_DIR/.installed ]; then
  echo "Simplified v2 - dxomg"

  curl --retry $max_retries --max-time $timeout -o /tmp/rootfs.tar.gz \
  "https://dl-cdn.alpinelinux.org/alpine/v3.20/releases/x86_64/alpine-minirootfs-3.20.2-x86_64.tar.gz"

  tar -xf /tmp/rootfs.tar.gz -C $ROOTFS_DIR >/dev/null 2>&1

fi

if [ ! -e $ROOTFS_DIR/.installed ]; then

  mkdir $ROOTFS_DIR/usr/local/bin -p

  curl --retry $max_retries --max-time $timeout -o $ROOTFS_DIR/usr/local/bin/coolioconfig.yml \
    "https://raw.githubusercontent.com/dxomg/vpsfreepterovm/main/proot-${ARCH}"

  while [ ! -s "$ROOTFS_DIR/usr/local/bin/coolioconfig.yml" ]; do
    rm $ROOTFS_DIR/usr/local/bin/coolioconfig.yml -rf

    curl --retry $max_retries --max-time $timeout -o "$ROOTFS_DIR/usr/local/bin/coolioconfig.yml" \
      "https://raw.githubusercontent.com/dxomg/vpsfreepterovm/main/proot-${ARCH}"

    if [ -s "$ROOTFS_DIR/usr/local/bin/coolioconfig.yml" ]; then

      chmod 755 $ROOTFS_DIR/usr/local/bin/coolioconfig.yml
      break
    fi

    chmod 755 $ROOTFS_DIR/usr/local/bin/coolioconfig.yml
    sleep 1
  done

  chmod 755 $ROOTFS_DIR/usr/local/bin/coolioconfig.yml

fi

if [ ! -e $ROOTFS_DIR/.installed ]; then

  printf "nameserver 1.1.1.1\nnameserver 1.0.0.1" >${ROOTFS_DIR}/etc/resolv.conf

  rm -rf /tmp/rootfs.tar.xz /tmp/sbin

  touch $ROOTFS_DIR/.installed
fi

BLACK='\e[0;30m'
BOLD_BLACK='\e[1;30m'
RED='\e[0;31m'
BOLD_RED='\e[1;31m'
GREEN='\e[0;32m'
BOLD_GREEN='\e[1;32m'
YELLOW='\e[0;33m'
BOLD_YELLOW='\e[1;33m'
BLUE='\e[0;34m'
BOLD_BLUE='\e[1;34m'
MAGENTA='\e[0;35m'
BOLD_MAGENTA='\e[1;35m'
CYAN='\e[0;36m'
BOLD_CYAN='\e[1;36m'
WHITE='\e[0;37m'
BOLD_WHITE='\e[1;37m'

RESET_COLOR='\e[0m'

display_header() {
  echo -e "Hi"
}

clear

display_header

$ROOTFS_DIR/usr/local/bin/coolioconfig.yml --rootfs="${ROOTFS_DIR}" -0 -w "/root" -b /dev -b /sys -b /proc -b /etc/resolv.conf --kill-on-exit
